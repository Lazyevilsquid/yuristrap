// Container
@mixin container-box {
	width: 100%;
	position: relative;
	padding-left: $container-padding;
	padding-right: $container-padding;
}
.container-fluid {
	@include container-box;
}
.container {
	max-width: $container-width;
	margin-left: auto;
	margin-right: auto;
	@include container-box;
}

// Grid
@mixin base-column ($i) {
	position: relative;
	padding-left: $column-padding;
	padding-right: $column-padding;
}
@mixin flex-column ($i) {
	flex: 0 0 percentage($i / $MAX-COLUMNS);
	max-width : percentage($i / $MAX-COLUMNS);
}
@mixin responsive-column ($i, $responsive-width) {
	width: 100%;
	@include base-column($i);
	// flex working on $responsive-width
	@media (min-width: $responsive-width) {
		@include flex-column($i);
	}
}
.row {
	display: flex;
	position: relative;
	margin-left: -$container-padding;
	margin-right: -$container-padding;
	// justify-content: space-between;
	// text-align: center;
	flex-wrap: wrap;
	/**
	 *	.col
	 *	@desc: auto sizing
	 */
	.col {
		position: relative;
		padding-left: $column-padding;
		padding-right: $column-padding;
		flex: 1 1 0;
	}
	@for $i from 1 through $MAX-COLUMNS {
		/**
		 *	.col-*
		 *	@desc: None-Responsive sizing. Based on flex
		 */
		.col-#{$i} {
			@include base-column($i);
			@include flex-column($i);
		}
		/**
		 *	.col-sm-*
		 *	@desc: Responsive sizing on SM-WIDTH
		 */
		.col-sm-#{$i} {
			@include responsive-column($i, $SM-WIDTH);
		}
		/**
		 *	.col-md-*
		 *	@desc: Responsive sizing on MD-WIDTH
		 */
		.col-md-#{$i} {
			@include responsive-column($i, $MD-WIDTH);
		}
		/**
		 *	.col-lg-*
		 *	@desc: Responsive sizing on LG-WIDTH
		 */
		.col-lg-#{$i} {
			@include responsive-column($i, $LG-WIDTH);
		}
	}
}